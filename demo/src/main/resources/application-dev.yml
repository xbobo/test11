
#token验证
author:
  checkToken: True

spring:
  data:
    mongodb:
      database: log
      port: 27917
      host: 127.0.0.1
  datasource:
    druid:
      # 数据库访问配置
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
      username: root
      password: 12345678
      # 下面为连接池的补充设置，应用到上面所有数据源中
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 2000
          merge-sql: true
        commons-log:
          connection-logger-name: stat,wall,log4j
      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions:
          -*.js
          -*.gif
          -*.jpg
          -*.bmp
          -*.png
          -*.css
          -*.ico
          -/druid/*
        session-stat-enable: true
        session-stat-max-count: 10
        principal-cookie-name:
        principal-session-name:
        profile-enable:
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: demo
        login-password: abc.123
        allow:
        deny:
      aop-patterns: com.example.demo.*
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
  application:
    name: demo1
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    virtual-host: guest_vhost

#cc视频平台
bokecc:
  user_id: 8BF6654C51957A80
  api_key: EeNxtg6vrvhrcBZt7h4aqSGe8wzrE2Jk
  token_public_key: 233e4c3e8f1d11e8
  post_url: https://api.csslcloud.net/api/v2/record/info
  format_url: https://api.csslcloud.net

logging:
  level:
    com.example.demo: debug

pagehelper:
  helperDialect: mysql
  reasonable: false
  supportMethodsArguments: true
  params: count=countSql

snowflakeidworker:
  workId: "19"
  datacenterId: "19"
